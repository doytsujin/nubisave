/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package nubisave.ui.backendconfig;

import java.awt.Color;
import java.awt.Desktop;
import java.awt.GridBagConstraints;
import java.awt.GridBagLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.File;
import java.io.IOException;
import java.net.URI;
import java.net.URISyntaxException;
import java.util.Map;
import java.util.Set;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.BorderFactory;
import javax.swing.JButton;
import javax.swing.JDialog;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JPasswordField;
import javax.swing.JTextField;
import javax.swing.SwingConstants;
import nubisave.StorageService;
import nubisave.ui.ServiceParameterDialog;
import org.ini4j.Ini;

/**
 * A configuration dialogue for the tonline.ini. 
 * Classes in this package will be instantiated by reflection instead of the generic ServiceParameterDialog,
 * so that custom configuration dialogues can be added in a modular fashion.
 */
public class Tonline extends JDialog {
    private StorageService service;
    private Ini config;
    protected final String URL ="https://mediencenter.t-online.de";

    /**
     * Creates new form to configure a component connection to the T-Online Mediacenter 
     */
    public Tonline(java.awt.Frame parent, boolean modal,StorageService service) {
        super(parent, modal);
        this.service = service;
        this.config = service.getConfig();
        initComponents();
        websiteBtn.setHorizontalAlignment(SwingConstants.LEFT);
        websiteBtn.setBorderPainted(false);
        websiteBtn.setOpaque(false);
        websiteBtn.setBackground(Color.WHITE);
        websiteBtn.setToolTipText(URL);
                                     
        //authentication info
        passwordPf.setText(config.get("auth").get("password"));
        usernameTf.setText(config.get("auth").get("user"));
        //info for the splitter component
        availabilityTf.setText(config.get("splitter").get("availability"));
        //infor for the backend
        autoregisterCb.setSelected(config.get("store").get("autoregister").toLowerCase().equals("true"));
        archivingLayerCb.setSelected(config.get("store").get("type").equals("chunk"));
        cacheSizeTf.setText(config.get("store").get("cache_size"));
        cacheTf.setText(config.get("store").get("cache"));
        hardCacheSizeTf.setText(config.get("store").get("hard_cache_size_limit"));
        metadataCacheTf.setText(config.get("store").get("metadata_cache"));
        cacheIdTf.setText(config.get("store").get("cache_id"));
    }

  private static void open(String uri) {
    if (Desktop.isDesktopSupported()) {
      try {
        URI real_uri = new URI(uri);
        Desktop.getDesktop().browse(real_uri);
      } catch (IOException e) { /* TODO: error handling */ } 
      catch (URISyntaxException ex) {}
    } else { /* TODO: error handling */ }
  }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        cancelBtn = new javax.swing.JButton();
        applyBtn = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        websiteBtn = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jTextField4 = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        usernameTf = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        passwordPf = new javax.swing.JPasswordField();
        jPanel3 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        autoregisterCb = new javax.swing.JCheckBox();
        jLabel14 = new javax.swing.JLabel();
        archivingLayerCb = new javax.swing.JCheckBox();
        jLabel16 = new javax.swing.JLabel();
        availabilityTf = new javax.swing.JTextField();
        jPasswordField1 = new javax.swing.JPasswordField();
        jPanel4 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        cacheSizeTf = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        cacheTf = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        hardCacheSizeTf = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        metadataCacheTf = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        cacheIdTf = new javax.swing.JTextField();

        jLabel1.setText("T-Online Mediacenter");

        cancelBtn.setText("Cancel");
        cancelBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelBtnActionPerformed(evt);
            }
        });

        applyBtn.setText("Apply");
        applyBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                applyBtnActionPerformed(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("info"));
        jPanel1.setLayout(new java.awt.GridLayout(3, 2));

        jLabel2.setText("website");
        jPanel1.add(jLabel2);

        websiteBtn.setText("<HTML> <FONT color=\\\"#000099\\\"><U>https://mediencenter.t-online.de</U></FONT></HTML>");
        websiteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                websiteBtnActionPerformed(evt);
            }
        });
        jPanel1.add(websiteBtn);

        jLabel4.setText("capacity  ");
        jPanel1.add(jLabel4);

        jTextField3.setEditable(false);
        jTextField3.setText("25 GB");
        jTextField3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField3ActionPerformed(evt);
            }
        });
        jPanel1.add(jTextField3);

        jLabel3.setText("description  ");
        jPanel1.add(jLabel3);

        jTextField4.setEditable(false);
        jTextField4.setText("German WebDAV server");
        jTextField4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField4ActionPerformed(evt);
            }
        });
        jPanel1.add(jTextField4);

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("auth"));
        jPanel2.setLayout(new java.awt.GridLayout(2, 2));

        jLabel7.setText("user");
        jPanel2.add(jLabel7);

        usernameTf.setToolTipText("<html>\nThe username needs to start with an alphabet character. <br>\nIt must not contain special characters, or umlauts (ä, ö, ü, ß),<br>\nbut it may contain numbers\n</html>");
        usernameTf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                usernameTfActionPerformed(evt);
            }
        });
        jPanel2.add(usernameTf);

        jLabel8.setText("password");
        jPanel2.add(jLabel8);

        passwordPf.setText("jPasswordField2");
        passwordPf.setToolTipText("<html>\nThe password needs to be at least 8 characters in length.<br>\nIt must contain at least two of the following categories of characters:<br>\n * upper case  letters<br>\n * lower case letters<br>\n * numbers<br>\n * special characters: ! $ % & / ( ) [ ] { } = ? ’ + * # - _ , . < > @ | ~  \n</html>");
        jPanel2.add(passwordPf);

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("misc"));
        jPanel3.setLayout(new java.awt.GridLayout(3, 2));

        jLabel9.setText("autoregister");
        jPanel3.add(jLabel9);

        autoregisterCb.setToolTipText("<html>\nRegister a new account with  the above username and password.<br>\nYou are guided through the registration process, after activating the component.<br>\n\n</html>");
        autoregisterCb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                autoregisterCbActionPerformed(evt);
            }
        });
        jPanel3.add(autoregisterCb);

        jLabel14.setText("archiving layer");
        jPanel3.add(jLabel14);

        archivingLayerCb.setToolTipText("<html>\nUse archiving layer, to create bigger archives from small files.<br>\nThis results in high upload performance, but has some space overhead, <br>\nsince currently an archive stays as it is until all files inside are deleted. <br>\nAlso the complete archive will be retrieved instead of a single file inside.<br>\nUncheck if you want less space overhead and no download overhead, <br>\nand if you often update or remove files. \n</html>");
        archivingLayerCb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                archivingLayerCbActionPerformed(evt);
            }
        });
        jPanel3.add(archivingLayerCb);

        jLabel16.setText("availability");
        jPanel3.add(jLabel16);

        availabilityTf.setToolTipText("<html>\nThe availability of data stored through this components between 0 and 1.<br>\nData is available if it is cached by the component, <br>\nor if the data can be downloaded from the storage provider. <br>\n1 means 100% availability or that the data is always available.\nA good availability estimation can decrease the amount of data you have to store.\n</html>");
        jPanel3.add(availabilityTf);

        jPasswordField1.setText("jPasswordField1");

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("cache"));
        jPanel4.setLayout(new java.awt.GridLayout(5, 2));

        jLabel10.setText("cache size");
        jPanel4.add(jLabel10);

        cacheSizeTf.setToolTipText("Approximate cache size limit in MB");
        jPanel4.add(cacheSizeTf);

        jLabel13.setText("cache");
        jPanel4.add(jLabel13);

        cacheTf.setToolTipText("<html>\nHow many seconds it may take until a file you just wrote <br>\nis beginning to be uploaded (180 sec is 3 Minutes)\n</html>");
        jPanel4.add(cacheTf);

        jLabel11.setText("hard cache size limit");
        jPanel4.add(jLabel11);

        hardCacheSizeTf.setToolTipText("<html>\nHard cache size limit in MB. <br>\nIf this is exceeded, write operations are slowed down significantly. \n</html>");
        jPanel4.add(hardCacheSizeTf);

        jLabel12.setText("metadata cache");
        jPanel4.add(jLabel12);

        metadataCacheTf.setToolTipText("<html>\nDuring this time you do not need to communicate with the store to see a directory listing, <br>\nfor instance (3024000 sec is one Year).\n</html>\n");
        jPanel4.add(metadataCacheTf);

        jLabel15.setText("cache id");
        jPanel4.add(jLabel15);

        cacheIdTf.setToolTipText("<html>\nIdentifier for the database. Use a distinct id to keep the cache after application shutdown.<br>\nThe default value is a random number.\n</html>");
        jPanel4.add(cacheIdTf);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jPasswordField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(60, 60, 60)
                        .addComponent(cancelBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(applyBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPasswordField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cancelBtn)
                    .addComponent(applyBtn))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void applyBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_applyBtnActionPerformed
        //authentication info
        config.get("auth").put("password", passwordPf.getText());
        config.get("auth").put("user", usernameTf.getText());
        //info for the splitter component
        config.get("splitter").put("availability", availabilityTf.getText());
        //infor for the backend
        config.get("store").put("autoregister", autoregisterCb.isSelected());
        if(archivingLayerCb.isSelected())
            config.get("store").put("type", "chunk");
        config.get("store").put("cache_size", cacheSizeTf.getText());
        config.get("store").put("cache", cacheTf.getText());
        config.get("store").put("hard_cache_size_limit", hardCacheSizeTf.getText());
        config.get("store").put("metadata_cache", metadataCacheTf.getText());
        config.get("store").put("cache_id", cacheIdTf.getText());
        nubisave.Nubisave.services.update(service);
        dispose();
    }//GEN-LAST:event_applyBtnActionPerformed

    private void cancelBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelBtnActionPerformed
        dispose();
    }//GEN-LAST:event_cancelBtnActionPerformed

    private void websiteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_websiteBtnActionPerformed
        open(URL);
    }//GEN-LAST:event_websiteBtnActionPerformed

    private void usernameTfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_usernameTfActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_usernameTfActionPerformed

    private void jTextField3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField3ActionPerformed

    private void jTextField4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField4ActionPerformed

    private void archivingLayerCbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_archivingLayerCbActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_archivingLayerCbActionPerformed

    private void autoregisterCbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_autoregisterCbActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_autoregisterCbActionPerformed



    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton applyBtn;
    private javax.swing.JCheckBox archivingLayerCb;
    private javax.swing.JCheckBox autoregisterCb;
    private javax.swing.JTextField availabilityTf;
    private javax.swing.JTextField cacheIdTf;
    private javax.swing.JTextField cacheSizeTf;
    private javax.swing.JTextField cacheTf;
    private javax.swing.JButton cancelBtn;
    private javax.swing.JTextField hardCacheSizeTf;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPasswordField jPasswordField1;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField metadataCacheTf;
    private javax.swing.JPasswordField passwordPf;
    private javax.swing.JTextField usernameTf;
    private javax.swing.JButton websiteBtn;
    // End of variables declaration//GEN-END:variables
}
